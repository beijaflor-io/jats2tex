Parse Success!

-----------------

Schema {schema_elementFormDefault = Unqualified, schema_attributeFormDefault = Unqualified, schema_finalDefault = Nothing, schema_blockDefault = Nothing, schema_targetNamespace = Nothing, schema_version = Nothing, schema_namespaces = [Namespace {nsPrefix = "mtl", nsURI = "http://www.mulberrytech.com/taglib"},Namespace {nsPrefix = "c", nsURI = "http://www.w3.org/ns/xproc-step"},Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"},Namespace {nsPrefix = "mml", nsURI = "http://www.w3.org/1998/Math/MathML"},Namespace {nsPrefix = "ali", nsURI = "http://www.niso.org/schemas/ali/1.0/"},Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}], schema_items = [Annotation (NoAnnotation "failed to parse"),Import "http://www.w3.org/XML/1998/namespace" "./standard-modules/xml.xsd" (NoAnnotation "missing"),Import "http://www.w3.org/1999/xlink" "./standard-modules/xlink.xsd" (NoAnnotation "missing"),Import "http://www.w3.org/1998/Math/MathML" "./standard-modules/mathml2/mathml2.xsd" (NoAnnotation "missing"),Import "http://www.niso.org/schemas/ali/1.0/" "./module-ali.xsd" (NoAnnotation "missing"),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "abbrev", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "abbrev-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "alt", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "abbrev-journal-title", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "abbrev-journal-title-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "abbrev-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "abstract", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "abstract-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "abstract-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "access-date", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "access-date-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "calendar", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "iso-8601-date", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "ack", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "ack-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "addr-line", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "addr-line-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "address", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "address-model"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "aff", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "aff-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "aff-alternatives", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "aff-alternatives-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "alt-text", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "alt-title", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "alt-title-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "alt-title-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "alternatives", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "alternatives-model"), group_occurs = Occurs Nothing (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "annotation", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "annotation-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "anonymous", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "app", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "app-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "app-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "app-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "array", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "array-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "orientation", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "portrait"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "landscape", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "portrait", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "article", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "article-full-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "article-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "dtd-version", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Just (Right "1.1"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Just (Left "en"), attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "article-categories", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "article-categories-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "article-id", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "pub-id-type", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "accession", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "ark", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "art-access-id", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "arxiv", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "coden", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "doaj", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "doi", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "handle", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "isbn", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "manuscript", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "medline", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "other", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "pii", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "pmcid", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "pmid", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "publisher-id", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "sici", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "std-designation", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "article-meta", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "article-meta-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "article-title", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "article-title-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "attrib", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "attrib-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "author-comment", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "author-comment-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "author-notes", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "author-notes-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "award-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "award-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "award-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "award-id", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "award-id-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "back", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "back-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "bio", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "bio-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "body", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "body-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "bold", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "emphasized-text"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "toggle", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "no", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "yes", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "boxed-text", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "boxed-text-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "orientation", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "portrait"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "landscape", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "portrait", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "position", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "float"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "anchor", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "background", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "float", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "margin", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "break", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "caption", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "caption-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "style", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "chapter-title", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "chapter-title-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "chem-struct", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "chem-struct-model"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "chem-struct-wrap", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "chem-struct-wrap-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "orientation", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "portrait"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "landscape", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "portrait", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "position", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "float"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "anchor", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "background", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "float", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "margin", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "citation-alternatives", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "citation-alternatives-model"), group_occurs = Occurs Nothing (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "city", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "city-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "code", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "code-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "code-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "code-version", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "executable", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "no", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "yes", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "language", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "language-version", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "orientation", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "portrait"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "landscape", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "portrait", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "platforms", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "position", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "float"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "anchor", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "background", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "float", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "margin", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "space"), attr_use = Optional, attr_defFixed = Just (Right "preserve"), attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "col", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "align", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "center", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "char", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "justify", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "left", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "right", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "char", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "charoff", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "span", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Just (Left "1"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "style", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "valign", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "baseline", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "bottom", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "middle", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "top", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "width", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "colgroup", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "colgroup.content"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "align", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "center", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "char", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "justify", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "left", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "right", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "char", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "charoff", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "span", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Just (Left "1"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "style", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "valign", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "baseline", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "bottom", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "middle", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "top", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "width", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "collab", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "collab-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "collab-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "symbol", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "collab-alternatives", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "collab-alternatives-model"), group_occurs = Occurs Nothing (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "comment", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "comment-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "compound-kwd", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "compound-kwd-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "compound-kwd-part", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "compound-kwd-part-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "compound-subject", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "compound-subject-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "compound-subject-part", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "compound-subject-part-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "conf-acronym", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "conf-acronym-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "conf-date", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "conf-date-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "calendar", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "iso-8601-date", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "conf-loc", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "conf-loc-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "conf-name", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "conf-name-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "conf-num", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "conf-num-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "conf-sponsor", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "conf-sponsor-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "conf-theme", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "conf-theme-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "conference", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "conference-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "contrib", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "contrib-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "contrib-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "corresp", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "no", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "yes", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "deceased", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "no", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "yes", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "equal-contrib", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "no", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "yes", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "contrib-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "contrib-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "contrib-id", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "contrib-id-model"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "authenticated", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "false"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "false", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "true", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "contrib-id-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "copyright-holder", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "copyright-holder-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "copyright-statement", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "copyright-statement-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "copyright-year", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "corresp", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "corresp-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "count", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "count", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "count-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "country", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "country-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "country", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "counts", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "counts-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "custom-meta", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "custom-meta-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "custom-meta-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "custom-meta-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "data-title", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "data-title-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "date", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "date-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "calendar", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "date-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "iso-8601-date", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "publication-format", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "date-in-citation", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "date-in-citation-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "calendar", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "iso-8601-date", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "day", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "def", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "def-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "def-head", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "def-head-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "def-item", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "def-item-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "def-list", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "def-list-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "continued-from", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREF")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "list-content", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "list-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "prefix-word", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "degrees", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "degrees-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "disp-formula", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "disp-formula-model"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "disp-formula-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "disp-formula-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "disp-quote", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "disp-quote-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "edition", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "edition-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "designator", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "element-citation", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs Nothing (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "citation-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "publication-format", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "publication-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "publisher-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "elocation-id", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "seq", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "email", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "email-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "equation-count", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "count", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "era", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "etal", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "etal-model"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "ext-link", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "ext-link-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "assigning-authority", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "ext-link-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "fax", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "fax-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "fig", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "fig-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "fig-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "orientation", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "portrait"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "landscape", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "portrait", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "position", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "float"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "anchor", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "background", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "float", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "margin", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "fig-count", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "count", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "fig-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "fig-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "orientation", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "portrait"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "landscape", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "portrait", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "position", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "float"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "anchor", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "background", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "float", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "margin", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "fixed-case", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "emphasized-text"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "floats-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "floats-group-model"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "fn", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "fn-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "fn-type", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "abbr", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "com", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "con", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "conflict", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "corresp", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "current-aff", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "deceased", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "edited-by", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "equal", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "financial-disclosure", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "on-leave", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "other", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "participating-researchers", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "present-address", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "presented-at", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "presented-by", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "previously-at", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "study-group-members", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "supplementary-material", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "supported-by", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "symbol", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "fn-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "fn-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "fpage", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "seq", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "front", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "front-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "front-stub", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "front-stub-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "funding-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "funding-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "funding-source", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "funding-source-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "country", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "source-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "funding-statement", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "funding-statement-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "given-names", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "given-names-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "initials", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "glossary", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "glossary-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "glyph-data", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "failed to parse", attr_nameOrRef = Left (NT {theName = "fontchar", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "failed to parse", attr_nameOrRef = Left (NT {theName = "fontname", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "failed to parse", attr_nameOrRef = Left (NT {theName = "format", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "failed to parse", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "failed to parse", attr_nameOrRef = Left (NT {theName = "resolution", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "failed to parse", attr_nameOrRef = Left (NT {theName = "x-size", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "space"), attr_use = Optional, attr_defFixed = Just (Right "preserve"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "failed to parse", attr_nameOrRef = Left (NT {theName = "y-size", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "glyph-ref", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "failed to parse", attr_nameOrRef = Left (NT {theName = "glyph-data", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREF")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "gov", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "gov-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "graphic", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "graphic-model"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "mime-subtype", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "mimetype", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "orientation", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "portrait"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "landscape", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "portrait", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "position", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "float"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "anchor", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "background", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "float", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "margin", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "history", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "history-model"), group_occurs = Occurs Nothing (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "hr", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "inline-formula", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "inline-formula-model"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "inline-graphic", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "inline-graphic-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "baseline-shift", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "mime-subtype", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "mimetype", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "inline-supplementary-material", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "inline-supplementary-material-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "mime-subtype", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "mimetype", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "institution", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "institution-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "institution-id", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "institution-id-model"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "institution-id-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "institution-wrap", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "institution-wrap-model"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "isbn", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "isbn-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "publication-format", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "issn", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "issn-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "pub-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "publication-format", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "issn-l", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "issn-l-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "issue", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "issue-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "seq", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "issue-id", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "pub-id-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "issue-part", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "issue-part-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "issue-sponsor", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "issue-sponsor-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "issue-title", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "issue-title-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "italic", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "emphasized-text"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "toggle", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "yes"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "no", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "yes", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "journal-id", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "journal-id-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "journal-meta", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "journal-meta-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "journal-subtitle", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "journal-subtitle-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "journal-title", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "journal-title-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "journal-title-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "journal-title-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "kwd", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "kwd-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "kwd-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "kwd-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "kwd-group-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "label", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "label-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "alt", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "license", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "license-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "license-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "license-p", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "license-p-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "list", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "list-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "continued-from", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREF")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "list-content", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "list-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "prefix-word", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "list-item", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "list-item-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "long-desc", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "long-desc-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "lpage", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "media", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "media-model"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "mime-subtype", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "mimetype", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "orientation", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "portrait"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "landscape", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "portrait", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "position", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "float"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "anchor", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "background", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "float", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "margin", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "meta-name", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "meta-name-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "meta-value", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "meta-value-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "milestone-end", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rationale", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREF")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "milestone-start", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rationale", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREF")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "mixed-citation", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "citation-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "publication-format", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "publication-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "publisher-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "monospace", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "emphasized-text"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "toggle", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "no", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "yes", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "month", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "name", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs Nothing Nothing) [HasCS (Choice (NoAnnotation "missing") (Occurs Nothing Nothing) [HasCS (Sequence (NoAnnotation "missing") (Occurs Nothing Nothing) [HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "surname"), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "given-names"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "given-names"), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "prefix"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "suffix"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "name-style", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "western"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "eastern", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "given-only", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "islensk", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "western", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "name-alternatives", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "name-alternatives-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "named-content", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "named-content-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "alt", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "nested-kwd", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "nested-kwd-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "nlm-citation", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs Nothing Nothing) [HasCS (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "person-group"), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "collab"), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]),HasCS (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "article-title"), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "trans-title"), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "source"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "patent"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "trans-source"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "year"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasCS (Choice (NoAnnotation "missing") (Occurs Nothing Nothing) [HasCS (Sequence (NoAnnotation "missing") (Occurs Nothing Nothing) [HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "month"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "day"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "time-stamp"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "season"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "access-date"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "volume"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "edition"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "conf-name"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "conf-date"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "conf-loc"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasCS (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "issue"), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "supplement"), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "publisher-loc"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "publisher-name"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasCS (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "fpage"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "lpage"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "page-count"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "series"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "comment"), elem_occurs = Occurs (Just 0) (Just 9223372036854775807), elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "pub-id"), elem_occurs = Occurs (Just 0) (Just 9223372036854775807), elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "annotation"), elem_occurs = Occurs (Just 0) Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "publication-format", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "publication-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "publisher-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "note", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "note-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "notes", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "notes-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "notes-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "object-id", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "pub-id-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "on-behalf-of", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "on-behalf-of-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "open-access", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "open-access-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "overline", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "emphasized-text"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "toggle", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "no", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "yes", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "overline-end", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREF")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "overline-start", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "p", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "p-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "page-count", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "count", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "page-range", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "part-title", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "part-title-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "patent", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "patent-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "country", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "permissions", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "permissions-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "person-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "person-group-model"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "person-group-type", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "allauthors", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "assignee", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "author", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "compiler", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "curator", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "director", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "editor", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "guest-editor", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "inventor", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "transed", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "translator", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "phone", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "phone-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "postal-code", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "postal-code-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "prefix", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "prefix-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "preformat", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "preformat-model"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "orientation", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "portrait"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "landscape", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "portrait", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "position", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "float"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "anchor", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "background", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "float", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "margin", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "preformat-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "space"), attr_use = Optional, attr_defFixed = Just (Right "preserve"), attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "price", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "price-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "currency", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "principal-award-recipient", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "principal-award-recipient-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "principal-investigator", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "principal-investigator-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "private-char", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "private-char-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "failed to parse", attr_nameOrRef = Left (NT {theName = "description", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "failed to parse", attr_nameOrRef = Left (NT {theName = "name", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "product", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "product-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "product-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "pub-date", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "pub-date-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "calendar", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "date-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "iso-8601-date", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "pub-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "publication-format", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "pub-id", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "assigning-authority", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "pub-id-type", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "accession", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "ark", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "art-access-id", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "arxiv", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "coden", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "doaj", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "doi", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "handle", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "isbn", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "manuscript", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "medline", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "other", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "pii", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "pmcid", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "pmid", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "publisher-id", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "sici", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "std-designation", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "publisher", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "publisher-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "publisher-loc", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "publisher-loc-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "publisher-name", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "publisher-name-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "rb", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "rb-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "ref", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "ref-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "ref-count", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "count", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "ref-list", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "ref-list-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "related-article", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "related-article-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "elocation-id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "ext-link-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "issue", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "journal-id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "journal-id-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "page", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "related-article-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "vol", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "related-object", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "related-object-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "document-id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "document-id-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "document-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "ext-link-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "link-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "object-id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "object-id-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "object-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "source-id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "source-id-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "source-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "response", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "article-short-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "response-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "role", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "role-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "roman", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "emphasized-text"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "toggle", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "no"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "no", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "yes", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "rp", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "rt", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "rt-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "ruby", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "ruby-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "sans-serif", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "emphasized-text"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "toggle", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "no", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "yes", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "sc", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "emphasized-text"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "toggle", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "no", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "yes", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "season", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "sec", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "sec-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "sec-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "sec-meta", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "sec-meta-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "self-uri", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "self-uri-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "series", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "series-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "series-text", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "series-text-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "series-title", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "series-title-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "sig", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "sig-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "sig-block", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "sig-block-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "size", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "size-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "units", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "source", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "source-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "speaker", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "speaker-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "speech", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "speech-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "state", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "state-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "statement", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "statement-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "std", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "std-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "std-organization", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "std-organization-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "strike", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "emphasized-text"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "toggle", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "no", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "yes", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "string-conf", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "string-conf-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "string-date", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "string-date-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "calendar", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "iso-8601-date", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "string-name", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "string-name-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "name-style", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "western"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "eastern", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "given-only", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "islensk", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "western", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "styled-content", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "styled-content-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "alt", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "style", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "style-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "toggle", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "no", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "yes", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "sub", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "emphasized-text"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "arrange", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "stack", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "stagger", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "sub-article", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "sub-article-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "article-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "subj-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "subj-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "subj-group-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "subject", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "subject-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "subtitle", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "subtitle-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "suffix", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "suffix-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "sup", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "emphasized-text"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "arrange", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "stack", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "stagger", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "supplement", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "supplement-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "supplement-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "supplementary-material", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "supplementary-material-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "mime-subtype", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "mimetype", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "orientation", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "portrait"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "landscape", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "portrait", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "position", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "float"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "anchor", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "background", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "float", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "margin", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "surname", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "surname-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "initials", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "table", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "table.content"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "border", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "cellpadding", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "cellspacing", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "frame", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "above", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "below", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "border", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "box", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "hsides", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "lhs", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "rhs", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "void", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "vsides", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rules", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "all", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "cols", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "groups", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "none", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "rows", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "style", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "summary", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "width", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "table-count", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "count", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "table-wrap", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "table-wrap-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "orientation", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "portrait"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "landscape", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "portrait", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "position", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "float"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "anchor", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "background", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "float", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "margin", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "table-wrap-foot", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "table-wrap-foot-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "table-wrap-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "table-wrap-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "orientation", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "portrait"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "landscape", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "portrait", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "position", theType = Nothing}), attr_use = Optional, attr_defFixed = Just (Left "float"), attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "anchor", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "background", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "float", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "margin", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "target", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "target-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "target-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "tbody", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "tbody.content"), group_occurs = Occurs Nothing (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "align", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "center", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "char", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "justify", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "left", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "right", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "char", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "charoff", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "style", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "valign", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "baseline", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "bottom", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "middle", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "top", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "td", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "td.content"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "abbr", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "align", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "center", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "char", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "justify", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "left", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "right", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "axis", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "char", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "charoff", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "colspan", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Just (Left "1"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "headers", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rowspan", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Just (Left "1"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "scope", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "col", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "colgroup", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "row", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "rowgroup", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "style", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "valign", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "baseline", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "bottom", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "middle", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "top", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "term", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "term-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "term-head", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "term-head-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "tex-math", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "notation", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "LaTeX", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "TEX", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "TeX", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "tex", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "version", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "textual-form", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "textual-form-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "tfoot", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "tfoot.content"), group_occurs = Occurs Nothing (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "align", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "center", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "char", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "justify", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "left", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "right", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "char", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "charoff", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "style", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "valign", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "baseline", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "bottom", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "middle", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "top", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "th", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "th.content"), group_occurs = Occurs (Just 0) (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "abbr", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "align", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "center", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "char", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "justify", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "left", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "right", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "axis", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "char", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "charoff", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "colspan", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Just (Left "1"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "headers", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rowspan", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Just (Left "1"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "scope", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "col", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "colgroup", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "row", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "rowgroup", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "style", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "valign", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "baseline", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "bottom", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "middle", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "top", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "thead", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "thead.content"), group_occurs = Occurs Nothing (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "align", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "center", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "char", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "justify", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "left", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "right", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "char", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "charoff", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "style", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "valign", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "baseline", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "bottom", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "middle", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "top", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "time-stamp", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "time-stamp-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "title", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "struct-title-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "title-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "title-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "tr", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "tr.content"), group_occurs = Occurs Nothing (Just 9223372036854775807), group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "align", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "center", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "char", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "justify", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "left", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "right", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "char", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "charoff", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "style", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "valign", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "baseline", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "bottom", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "middle", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "top", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "trans-abstract", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "trans-abstract-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "abstract-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "trans-source", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "source-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "trans-subtitle", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "trans-subtitle-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "trans-title", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "trans-title-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "trans-title-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "trans-title-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "underline", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "emphasized-text"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "toggle", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "no", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "yes", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "underline-style", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "underline-end", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREF")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "underline-start", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "unstructured-kwd-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "unstructured-kwd-group-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "kwd-group-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "uri", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "uri-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "verse-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "verse-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "verse-line", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "verse-line-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "version", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "version-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "designator", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "volume", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "volume-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "seq", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "volume-id", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "volume-id-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "pub-id-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "actuate"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "href"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "role"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "show"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "title"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xlink", nsURI = "http://www.w3.org/1999/xlink"}) "type"), attr_use = Optional, attr_defFixed = Just (Right "simple"), attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "volume-issue-group", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Right (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "volume-issue-group-model"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing}))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "volume-series", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "volume-series-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "word-count", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "count", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "x", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "x-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "space"), attr_use = Optional, attr_defFixed = Just (Right "preserve"), attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "xref", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) [HasGroup (Group {group_annotation = NoAnnotation "missing", group_nameOrRef = Right (N "xref-elements"), group_occurs = Occurs Nothing Nothing, group_stuff = Nothing})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "alt", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "ref-type", theType = Nothing}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Just (Restricted {simple_annotation = NoAnnotation "failed to parse", simple_name = Nothing, simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "NMTOKEN"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "aff", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "app", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "author-notes", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "bibr", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "boxed-text", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "chem", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "collab", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "contrib", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "corresp", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "disp-formula", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "fig", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "fn", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "kwd", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "list", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "other", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "plate", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "scheme", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "sec", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "statement", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "supplementary-material", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "table", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "table-fn", facet_fixed = False}]}})}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "rid", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "IDREFS")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "failed to parse", elem_nameOrRef = Left (NT {theName = "year", theType = Nothing}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Just (Right (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Nothing, complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = True, complex_content = ThisType {ci_thistype = PA (Just (Left (Choice (NoAnnotation "missing") (Occurs (Just 0) (Just 9223372036854775807)) []))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "calendar", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "content-type", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "id", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "ID")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "iso-8601-date", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "specific-use", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "base"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Right (QN (Namespace {nsPrefix = "xml", nsURI = ""}) "lang"), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}})), elem_stuff = []})]}

-----------------

